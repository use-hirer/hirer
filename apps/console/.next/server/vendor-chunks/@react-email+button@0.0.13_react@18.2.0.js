"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-email+button@0.0.13_react@18.2.0";
exports.ids = ["vendor-chunks/@react-email+button@0.0.13_react@18.2.0"];
exports.modules = {

/***/ "(rsc)/../../node_modules/.pnpm/@react-email+button@0.0.13_react@18.2.0/node_modules/@react-email/button/dist/index.mjs":
/*!************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@react-email+button@0.0.13_react@18.2.0/node_modules/@react-email/button/dist/index.mjs ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Button: () => (/* binding */ Button)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/../../node_modules/.pnpm/next@14.1.0_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)){\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    }\n    return a;\n};\nvar __spreadProps = (a, b)=>__defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude)=>{\n    var target = {};\n    for(var prop in source)if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n    if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)){\n        if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n    }\n    return target;\n};\n// src/utils/px-to-pt.ts\nvar pxToPt = (px)=>typeof px === \"number\" && !isNaN(Number(px)) ? px * 3 / 4 : null;\n// src/utils/parse-padding.ts\nfunction convertToPx(value) {\n    let px = 0;\n    if (!value) {\n        return px;\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    const matches = /^([\\d.]+)(px|em|rem|%)$/.exec(value);\n    if (matches && matches.length === 3) {\n        const numValue = parseFloat(matches[1]);\n        const unit = matches[2];\n        switch(unit){\n            case \"px\":\n                return numValue;\n            case \"em\":\n            case \"rem\":\n                px = numValue * 16;\n                return px;\n            case \"%\":\n                px = numValue / 100 * 600;\n                return px;\n            default:\n                return numValue;\n        }\n    } else {\n        return 0;\n    }\n}\nfunction parsePadding({ padding = \"\", paddingTop, paddingRight, paddingBottom, paddingLeft }) {\n    let pt = 0;\n    let pr = 0;\n    let pb = 0;\n    let pl = 0;\n    if (typeof padding === \"number\") {\n        pt = padding;\n        pr = padding;\n        pb = padding;\n        pl = padding;\n    } else {\n        const values = padding.split(/\\s+/);\n        switch(values.length){\n            case 1:\n                pt = convertToPx(values[0]);\n                pr = convertToPx(values[0]);\n                pb = convertToPx(values[0]);\n                pl = convertToPx(values[0]);\n                break;\n            case 2:\n                pt = convertToPx(values[0]);\n                pb = convertToPx(values[0]);\n                pr = convertToPx(values[1]);\n                pl = convertToPx(values[1]);\n                break;\n            case 3:\n                pt = convertToPx(values[0]);\n                pr = convertToPx(values[1]);\n                pl = convertToPx(values[1]);\n                pb = convertToPx(values[2]);\n                break;\n            case 4:\n                pt = convertToPx(values[0]);\n                pr = convertToPx(values[1]);\n                pb = convertToPx(values[2]);\n                pl = convertToPx(values[3]);\n                break;\n            default:\n                break;\n        }\n    }\n    return {\n        pt: paddingTop ? convertToPx(paddingTop) : pt,\n        pr: paddingRight ? convertToPx(paddingRight) : pr,\n        pb: paddingBottom ? convertToPx(paddingBottom) : pb,\n        pl: paddingLeft ? convertToPx(paddingLeft) : pl\n    };\n}\n// src/button.tsx\n\nvar Button = (_a)=>{\n    var _b = _a, { children, style, target = \"_blank\" } = _b, props = __objRest(_b, [\n        \"children\",\n        \"style\",\n        \"target\"\n    ]);\n    const { pt, pr, pb, pl } = parsePadding({\n        padding: style == null ? void 0 : style.padding,\n        paddingLeft: style == null ? void 0 : style.paddingLeft,\n        paddingRight: style == null ? void 0 : style.paddingRight,\n        paddingTop: style == null ? void 0 : style.paddingTop,\n        paddingBottom: style == null ? void 0 : style.paddingBottom\n    });\n    const y = pt + pb;\n    const textRaise = pxToPt(y);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"a\", __spreadProps(__spreadValues({}, props), {\n        style: buttonStyle(__spreadProps(__spreadValues({}, style), {\n            pt,\n            pr,\n            pb,\n            pl\n        })),\n        target,\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                dangerouslySetInnerHTML: {\n                    __html: `<!--[if mso]><i style=\"letter-spacing: ${pl}px;mso-font-width:-100%;mso-text-raise:${textRaise}\" hidden>&nbsp;</i><![endif]-->`\n                }\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                style: buttonTextStyle(pb),\n                children\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                dangerouslySetInnerHTML: {\n                    __html: `<!--[if mso]><i style=\"letter-spacing: ${pr}px;mso-font-width:-100%\" hidden>&nbsp;</i><![endif]-->`\n                }\n            })\n        ]\n    }));\n};\nvar buttonStyle = (style)=>{\n    const _a = style || {}, { pt, pr, pb, pl } = _a, rest = __objRest(_a, [\n        \"pt\",\n        \"pr\",\n        \"pb\",\n        \"pl\"\n    ]);\n    return __spreadProps(__spreadValues({}, rest), {\n        lineHeight: \"100%\",\n        textDecoration: \"none\",\n        display: \"inline-block\",\n        maxWidth: \"100%\",\n        padding: `${pt}px ${pr}px ${pb}px ${pl}px`\n    });\n};\nvar buttonTextStyle = (pb)=>{\n    return {\n        maxWidth: \"100%\",\n        display: \"inline-block\",\n        lineHeight: \"120%\",\n        msoPaddingAlt: \"0px\",\n        msoTextRaise: pxToPt(pb || 0)\n    };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@react-email+button@0.0.13_react@18.2.0/node_modules/@react-email/button/dist/index.mjs\n");

/***/ })

};
;