"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/d3-path@3.1.0";
exports.ids = ["vendor-chunks/d3-path@3.1.0"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/d3-path@3.1.0/node_modules/d3-path/src/path.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/.pnpm/d3-path@3.1.0/node_modules/d3-path/src/path.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Path: () => (/* binding */ Path),\n/* harmony export */   path: () => (/* binding */ path),\n/* harmony export */   pathRound: () => (/* binding */ pathRound)\n/* harmony export */ });\nconst pi = Math.PI, tau = 2 * pi, epsilon = 1e-6, tauEpsilon = tau - epsilon;\nfunction append(strings) {\n    this._ += strings[0];\n    for(let i = 1, n = strings.length; i < n; ++i){\n        this._ += arguments[i] + strings[i];\n    }\n}\nfunction appendRound(digits) {\n    let d = Math.floor(digits);\n    if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n    if (d > 15) return append;\n    const k = 10 ** d;\n    return function(strings) {\n        this._ += strings[0];\n        for(let i = 1, n = strings.length; i < n; ++i){\n            this._ += Math.round(arguments[i] * k) / k + strings[i];\n        }\n    };\n}\nclass Path {\n    constructor(digits){\n        this._x0 = this._y0 = this._x1 = this._y1 = null; // end of current subpath\n        this._ = \"\";\n        this._append = digits == null ? append : appendRound(digits);\n    }\n    moveTo(x, y) {\n        this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n    }\n    closePath() {\n        if (this._x1 !== null) {\n            this._x1 = this._x0, this._y1 = this._y0;\n            this._append`Z`;\n        }\n    }\n    lineTo(x, y) {\n        this._append`L${this._x1 = +x},${this._y1 = +y}`;\n    }\n    quadraticCurveTo(x1, y1, x, y) {\n        this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n    }\n    bezierCurveTo(x1, y1, x2, y2, x, y) {\n        this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n    }\n    arcTo(x1, y1, x2, y2, r) {\n        x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n        // Is the radius negative? Error.\n        if (r < 0) throw new Error(`negative radius: ${r}`);\n        let x0 = this._x1, y0 = this._y1, x21 = x2 - x1, y21 = y2 - y1, x01 = x0 - x1, y01 = y0 - y1, l01_2 = x01 * x01 + y01 * y01;\n        // Is this path empty? Move to (x1,y1).\n        if (this._x1 === null) {\n            this._append`M${this._x1 = x1},${this._y1 = y1}`;\n        } else if (!(l01_2 > epsilon)) ;\n        else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n            this._append`L${this._x1 = x1},${this._y1 = y1}`;\n        } else {\n            let x20 = x2 - x0, y20 = y2 - y0, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l / l01, t21 = l / l21;\n            // If the start tangent is not coincident with (x0,y0), line to.\n            if (Math.abs(t01 - 1) > epsilon) {\n                this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n            }\n            this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n        }\n    }\n    arc(x, y, r, a0, a1, ccw) {\n        x = +x, y = +y, r = +r, ccw = !!ccw;\n        // Is the radius negative? Error.\n        if (r < 0) throw new Error(`negative radius: ${r}`);\n        let dx = r * Math.cos(a0), dy = r * Math.sin(a0), x0 = x + dx, y0 = y + dy, cw = 1 ^ ccw, da = ccw ? a0 - a1 : a1 - a0;\n        // Is this path empty? Move to (x0,y0).\n        if (this._x1 === null) {\n            this._append`M${x0},${y0}`;\n        } else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n            this._append`L${x0},${y0}`;\n        }\n        // Is this arc empty? Weâ€™re done.\n        if (!r) return;\n        // Does the angle go the wrong way? Flip the direction.\n        if (da < 0) da = da % tau + tau;\n        // Is this a complete circle? Draw two arcs to complete the circle.\n        if (da > tauEpsilon) {\n            this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n        } else if (da > epsilon) {\n            this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n        }\n    }\n    rect(x, y, w, h) {\n        this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n    }\n    toString() {\n        return this._;\n    }\n}\nfunction path() {\n    return new Path;\n}\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\nfunction pathRound(digits = 3) {\n    return new Path(+digits);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/d3-path@3.1.0/node_modules/d3-path/src/path.js\n");

/***/ })

};
;