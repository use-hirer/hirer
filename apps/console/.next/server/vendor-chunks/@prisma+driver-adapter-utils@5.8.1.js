"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@prisma+driver-adapter-utils@5.8.1";
exports.ids = ["vendor-chunks/@prisma+driver-adapter-utils@5.8.1"];
exports.modules = {

/***/ "(rsc)/../../node_modules/.pnpm/@prisma+driver-adapter-utils@5.8.1/node_modules/@prisma/driver-adapter-utils/dist/index.mjs":
/*!****************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@prisma+driver-adapter-utils@5.8.1/node_modules/@prisma/driver-adapter-utils/dist/index.mjs ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ColumnTypeEnum: () => (/* binding */ ColumnTypeEnum),\n/* harmony export */   Debug: () => (/* binding */ Debug),\n/* harmony export */   JsonNullMarker: () => (/* binding */ JsonNullMarker),\n/* harmony export */   bindAdapter: () => (/* binding */ bindAdapter),\n/* harmony export */   err: () => (/* binding */ err),\n/* harmony export */   ok: () => (/* binding */ ok)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(rsc)/../../node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/index.js\");\n// src/result.ts\nfunction ok(value) {\n    return {\n        ok: true,\n        value,\n        map (fn) {\n            return ok(fn(value));\n        },\n        flatMap (fn) {\n            return fn(value);\n        }\n    };\n}\nfunction err(error) {\n    return {\n        ok: false,\n        error,\n        map () {\n            return err(error);\n        },\n        flatMap () {\n            return err(error);\n        }\n    };\n}\n// src/binder.ts\nvar ErrorRegistryInternal = class {\n    constructor(){\n        this.registeredErrors = [];\n    }\n    consumeError(id) {\n        return this.registeredErrors[id];\n    }\n    registerNewError(error) {\n        let i = 0;\n        while(this.registeredErrors[i] !== void 0){\n            i++;\n        }\n        this.registeredErrors[i] = {\n            error\n        };\n        return i;\n    }\n};\nvar bindAdapter = (adapter)=>{\n    const errorRegistry = new ErrorRegistryInternal();\n    const startTransaction = wrapAsync(errorRegistry, adapter.startTransaction.bind(adapter));\n    const boundAdapter = {\n        errorRegistry,\n        queryRaw: wrapAsync(errorRegistry, adapter.queryRaw.bind(adapter)),\n        executeRaw: wrapAsync(errorRegistry, adapter.executeRaw.bind(adapter)),\n        provider: adapter.provider,\n        startTransaction: async (...args)=>{\n            const result = await startTransaction(...args);\n            return result.map((tx)=>bindTransaction(errorRegistry, tx));\n        }\n    };\n    if (adapter.getConnectionInfo) {\n        boundAdapter.getConnectionInfo = wrapSync(errorRegistry, adapter.getConnectionInfo.bind(adapter));\n    }\n    return boundAdapter;\n};\nvar bindTransaction = (errorRegistry, transaction)=>{\n    return {\n        provider: transaction.provider,\n        options: transaction.options,\n        queryRaw: wrapAsync(errorRegistry, transaction.queryRaw.bind(transaction)),\n        executeRaw: wrapAsync(errorRegistry, transaction.executeRaw.bind(transaction)),\n        commit: wrapAsync(errorRegistry, transaction.commit.bind(transaction)),\n        rollback: wrapAsync(errorRegistry, transaction.rollback.bind(transaction))\n    };\n};\nfunction wrapAsync(registry, fn) {\n    return async (...args)=>{\n        try {\n            return await fn(...args);\n        } catch (error) {\n            const id = registry.registerNewError(error);\n            return err({\n                kind: \"GenericJs\",\n                id\n            });\n        }\n    };\n}\nfunction wrapSync(registry, fn) {\n    return (...args)=>{\n        try {\n            return fn(...args);\n        } catch (error) {\n            const id = registry.registerNewError(error);\n            return err({\n                kind: \"GenericJs\",\n                id\n            });\n        }\n    };\n}\n// src/const.ts\nvar ColumnTypeEnum = {\n    // Scalars\n    Int32: 0,\n    Int64: 1,\n    Float: 2,\n    Double: 3,\n    Numeric: 4,\n    Boolean: 5,\n    Character: 6,\n    Text: 7,\n    Date: 8,\n    Time: 9,\n    DateTime: 10,\n    Json: 11,\n    Enum: 12,\n    Bytes: 13,\n    Set: 14,\n    Uuid: 15,\n    // Arrays\n    Int32Array: 64,\n    Int64Array: 65,\n    FloatArray: 66,\n    DoubleArray: 67,\n    NumericArray: 68,\n    BooleanArray: 69,\n    CharacterArray: 70,\n    TextArray: 71,\n    DateArray: 72,\n    TimeArray: 73,\n    DateTimeArray: 74,\n    JsonArray: 75,\n    EnumArray: 76,\n    BytesArray: 77,\n    UuidArray: 78,\n    // Custom\n    UnknownNumber: 128\n};\nvar JsonNullMarker = \"$__prisma_null\";\n// src/debug.ts\n\nvar Debug = debug__WEBPACK_IMPORTED_MODULE_0__.debug;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@prisma+driver-adapter-utils@5.8.1/node_modules/@prisma/driver-adapter-utils/dist/index.mjs\n");

/***/ })

};
;