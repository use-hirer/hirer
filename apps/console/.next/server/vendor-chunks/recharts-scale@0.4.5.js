"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/recharts-scale@0.4.5";
exports.ids = ["vendor-chunks/recharts-scale@0.4.5"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/getNiceTickValues.js":
/*!**********************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/getNiceTickValues.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNiceTickValues: () => (/* binding */ getNiceTickValues),\n/* harmony export */   getTickValues: () => (/* binding */ getTickValues),\n/* harmony export */   getTickValuesFixedDomain: () => (/* binding */ getTickValuesFixedDomain)\n/* harmony export */ });\n/* harmony import */ var decimal_js_light__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! decimal.js-light */ \"(ssr)/../../node_modules/.pnpm/decimal.js-light@2.5.1/node_modules/decimal.js-light/decimal.mjs\");\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/utils */ \"(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/utils.js\");\n/* harmony import */ var _util_arithmetic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/arithmetic */ \"(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/arithmetic.js\");\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++){\n        arr2[i] = arr[i];\n    }\n    return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n/**\n * @fileOverview calculate tick values of scale\n * @author xile611, arcthur\n * @date 2015-09-17\n */ \n\n\n/**\n * Calculate a interval of a minimum value and a maximum value\n *\n * @param  {Number} min       The minimum value\n * @param  {Number} max       The maximum value\n * @return {Array} An interval\n */ function getValidInterval(_ref) {\n    var _ref2 = _slicedToArray(_ref, 2), min = _ref2[0], max = _ref2[1];\n    var validMin = min, validMax = max; // exchange\n    if (min > max) {\n        validMin = max;\n        validMax = min;\n    }\n    return [\n        validMin,\n        validMax\n    ];\n}\n/**\n * Calculate the step which is easy to understand between ticks, like 10, 20, 25\n *\n * @param  {Decimal} roughStep        The rough step calculated by deviding the\n * difference by the tickCount\n * @param  {Boolean} allowDecimals    Allow the ticks to be decimals or not\n * @param  {Integer} correctionFactor A correction factor\n * @return {Decimal} The step which is easy to understand between two ticks\n */ function getFormatStep(roughStep, allowDecimals, correctionFactor) {\n    if (roughStep.lte(0)) {\n        return new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n    }\n    var digitCount = _util_arithmetic__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getDigitCount(roughStep.toNumber()); // The ratio between the rough step and the smallest number which has a bigger\n    // order of magnitudes than the rough step\n    var digitCountValue = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](10).pow(digitCount);\n    var stepRatio = roughStep.div(digitCountValue); // When an integer and a float multiplied, the accuracy of result may be wrong\n    var stepRatioScale = digitCount !== 1 ? 0.05 : 0.1;\n    var amendStepRatio = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.ceil(stepRatio.div(stepRatioScale).toNumber())).add(correctionFactor).mul(stepRatioScale);\n    var formatStep = amendStepRatio.mul(digitCountValue);\n    return allowDecimals ? formatStep : new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.ceil(formatStep));\n}\n/**\n * calculate the ticks when the minimum value equals to the maximum value\n *\n * @param  {Number}  value         The minimum valuue which is also the maximum value\n * @param  {Integer} tickCount     The count of ticks\n * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not\n * @return {Array}                 ticks\n */ function getTickOfSingleValue(value, tickCount, allowDecimals) {\n    var step = 1; // calculate the middle value of ticks\n    var middle = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](value);\n    if (!middle.isint() && allowDecimals) {\n        var absVal = Math.abs(value);\n        if (absVal < 1) {\n            // The step should be a float number when the difference is smaller than 1\n            step = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](10).pow(_util_arithmetic__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getDigitCount(value) - 1);\n            middle = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.floor(middle.div(step).toNumber())).mul(step);\n        } else if (absVal > 1) {\n            // Return the maximum integer which is smaller than 'value' when 'value' is greater than 1\n            middle = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.floor(value));\n        }\n    } else if (value === 0) {\n        middle = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.floor((tickCount - 1) / 2));\n    } else if (!allowDecimals) {\n        middle = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.floor(value));\n    }\n    var middleIndex = Math.floor((tickCount - 1) / 2);\n    var fn = (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.compose)((0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.map)(function(n) {\n        return middle.add(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](n - middleIndex).mul(step)).toNumber();\n    }), _util_utils__WEBPACK_IMPORTED_MODULE_1__.range);\n    return fn(0, tickCount);\n}\n/**\n * Calculate the step\n *\n * @param  {Number}  min              The minimum value of an interval\n * @param  {Number}  max              The maximum value of an interval\n * @param  {Integer} tickCount        The count of ticks\n * @param  {Boolean} allowDecimals    Allow the ticks to be decimals or not\n * @param  {Number}  correctionFactor A correction factor\n * @return {Object}  The step, minimum value of ticks, maximum value of ticks\n */ function calculateStep(min, max, tickCount, allowDecimals) {\n    var correctionFactor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    // dirty hack (for recharts' test)\n    if (!Number.isFinite((max - min) / (tickCount - 1))) {\n        return {\n            step: new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0),\n            tickMin: new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0),\n            tickMax: new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0)\n        };\n    } // The step which is easy to understand between two ticks\n    var step = getFormatStep(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](max).sub(min).div(tickCount - 1), allowDecimals, correctionFactor); // A medial value of ticks\n    var middle; // When 0 is inside the interval, 0 should be a tick\n    if (min <= 0 && max >= 0) {\n        middle = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n    } else {\n        // calculate the middle value\n        middle = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](min).add(max).div(2); // minus modulo value\n        middle = middle.sub(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](middle).mod(step));\n    }\n    var belowCount = Math.ceil(middle.sub(min).div(step).toNumber());\n    var upCount = Math.ceil(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](max).sub(middle).div(step).toNumber());\n    var scaleCount = belowCount + upCount + 1;\n    if (scaleCount > tickCount) {\n        // When more ticks need to cover the interval, step should be bigger.\n        return calculateStep(min, max, tickCount, allowDecimals, correctionFactor + 1);\n    }\n    if (scaleCount < tickCount) {\n        // When less ticks can cover the interval, we should add some additional ticks\n        upCount = max > 0 ? upCount + (tickCount - scaleCount) : upCount;\n        belowCount = max > 0 ? belowCount : belowCount + (tickCount - scaleCount);\n    }\n    return {\n        step: step,\n        tickMin: middle.sub(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](belowCount).mul(step)),\n        tickMax: middle.add(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](upCount).mul(step))\n    };\n}\n/**\n * Calculate the ticks of an interval, the count of ticks will be guraranteed\n *\n * @param  {Number}  min, max      min: The minimum value, max: The maximum value\n * @param  {Integer} tickCount     The count of ticks\n * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not\n * @return {Array}   ticks\n */ function getNiceTickValuesFn(_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2), min = _ref4[0], max = _ref4[1];\n    var tickCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n    var allowDecimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // More than two ticks should be return\n    var count = Math.max(tickCount, 2);\n    var _getValidInterval = getValidInterval([\n        min,\n        max\n    ]), _getValidInterval2 = _slicedToArray(_getValidInterval, 2), cormin = _getValidInterval2[0], cormax = _getValidInterval2[1];\n    if (cormin === -Infinity || cormax === Infinity) {\n        var _values = cormax === Infinity ? [\n            cormin\n        ].concat(_toConsumableArray((0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.range)(0, tickCount - 1).map(function() {\n            return Infinity;\n        }))) : [].concat(_toConsumableArray((0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.range)(0, tickCount - 1).map(function() {\n            return -Infinity;\n        })), [\n            cormax\n        ]);\n        return min > max ? (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.reverse)(_values) : _values;\n    }\n    if (cormin === cormax) {\n        return getTickOfSingleValue(cormin, tickCount, allowDecimals);\n    } // Get the step between two ticks\n    var _calculateStep = calculateStep(cormin, cormax, count, allowDecimals), step = _calculateStep.step, tickMin = _calculateStep.tickMin, tickMax = _calculateStep.tickMax;\n    var values = _util_arithmetic__WEBPACK_IMPORTED_MODULE_2__[\"default\"].rangeStep(tickMin, tickMax.add(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.1).mul(step)), step);\n    return min > max ? (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.reverse)(values) : values;\n}\n/**\n * Calculate the ticks of an interval, the count of ticks won't be guraranteed\n *\n * @param  {Number}  min, max      min: The minimum value, max: The maximum value\n * @param  {Integer} tickCount     The count of ticks\n * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not\n * @return {Array}   ticks\n */ function getTickValuesFn(_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2), min = _ref6[0], max = _ref6[1];\n    var tickCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n    var allowDecimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // More than two ticks should be return\n    var count = Math.max(tickCount, 2);\n    var _getValidInterval3 = getValidInterval([\n        min,\n        max\n    ]), _getValidInterval4 = _slicedToArray(_getValidInterval3, 2), cormin = _getValidInterval4[0], cormax = _getValidInterval4[1];\n    if (cormin === -Infinity || cormax === Infinity) {\n        return [\n            min,\n            max\n        ];\n    }\n    if (cormin === cormax) {\n        return getTickOfSingleValue(cormin, tickCount, allowDecimals);\n    }\n    var step = getFormatStep(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](cormax).sub(cormin).div(count - 1), allowDecimals, 0);\n    var fn = (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.compose)((0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.map)(function(n) {\n        return new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](cormin).add(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](n).mul(step)).toNumber();\n    }), _util_utils__WEBPACK_IMPORTED_MODULE_1__.range);\n    var values = fn(0, count).filter(function(entry) {\n        return entry >= cormin && entry <= cormax;\n    });\n    return min > max ? (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.reverse)(values) : values;\n}\n/**\n * Calculate the ticks of an interval, the count of ticks won't be guraranteed,\n * but the domain will be guaranteed\n *\n * @param  {Number}  min, max      min: The minimum value, max: The maximum value\n * @param  {Integer} tickCount     The count of ticks\n * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not\n * @return {Array}   ticks\n */ function getTickValuesFixedDomainFn(_ref7, tickCount) {\n    var _ref8 = _slicedToArray(_ref7, 2), min = _ref8[0], max = _ref8[1];\n    var allowDecimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // More than two ticks should be return\n    var _getValidInterval5 = getValidInterval([\n        min,\n        max\n    ]), _getValidInterval6 = _slicedToArray(_getValidInterval5, 2), cormin = _getValidInterval6[0], cormax = _getValidInterval6[1];\n    if (cormin === -Infinity || cormax === Infinity) {\n        return [\n            min,\n            max\n        ];\n    }\n    if (cormin === cormax) {\n        return [\n            cormin\n        ];\n    }\n    var count = Math.max(tickCount, 2);\n    var step = getFormatStep(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](cormax).sub(cormin).div(count - 1), allowDecimals, 0);\n    var values = [].concat(_toConsumableArray(_util_arithmetic__WEBPACK_IMPORTED_MODULE_2__[\"default\"].rangeStep(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](cormin), new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](cormax).sub(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.99).mul(step)), step)), [\n        cormax\n    ]);\n    return min > max ? (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.reverse)(values) : values;\n}\nvar getNiceTickValues = (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.memoize)(getNiceTickValuesFn);\nvar getTickValues = (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.memoize)(getTickValuesFn);\nvar getTickValuesFixedDomain = (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.memoize)(getTickValuesFixedDomainFn);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/getNiceTickValues.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/index.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNiceTickValues: () => (/* reexport safe */ _getNiceTickValues__WEBPACK_IMPORTED_MODULE_0__.getNiceTickValues),\n/* harmony export */   getTickValues: () => (/* reexport safe */ _getNiceTickValues__WEBPACK_IMPORTED_MODULE_0__.getTickValues),\n/* harmony export */   getTickValuesFixedDomain: () => (/* reexport safe */ _getNiceTickValues__WEBPACK_IMPORTED_MODULE_0__.getTickValuesFixedDomain)\n/* harmony export */ });\n/* harmony import */ var _getNiceTickValues__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNiceTickValues */ \"(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/getNiceTickValues.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlY2hhcnRzLXNjYWxlQDAuNC41L25vZGVfbW9kdWxlcy9yZWNoYXJ0cy1zY2FsZS9lczYvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpRyIsInNvdXJjZXMiOlsid2VicGFjazovL2hpcmVyLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWNoYXJ0cy1zY2FsZUAwLjQuNS9ub2RlX21vZHVsZXMvcmVjaGFydHMtc2NhbGUvZXM2L2luZGV4LmpzP2I1NGMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZ2V0VGlja1ZhbHVlcywgZ2V0TmljZVRpY2tWYWx1ZXMsIGdldFRpY2tWYWx1ZXNGaXhlZERvbWFpbiB9IGZyb20gJy4vZ2V0TmljZVRpY2tWYWx1ZXMnOyJdLCJuYW1lcyI6WyJnZXRUaWNrVmFsdWVzIiwiZ2V0TmljZVRpY2tWYWx1ZXMiLCJnZXRUaWNrVmFsdWVzRml4ZWREb21haW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/arithmetic.js":
/*!********************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/arithmetic.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var decimal_js_light__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! decimal.js-light */ \"(ssr)/../../node_modules/.pnpm/decimal.js-light@2.5.1/node_modules/decimal.js-light/decimal.mjs\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/utils.js\");\n/**\n * @fileOverview 一些公用的运算方法\n * @author xile611\n * @date 2015-09-17\n */ \n\n/**\n * 获取数值的位数\n * 其中绝对值属于区间[0.1, 1)， 得到的值为0\n * 绝对值属于区间[0.01, 0.1)，得到的位数为 -1\n * 绝对值属于区间[0.001, 0.01)，得到的位数为 -2\n *\n * @param  {Number} value 数值\n * @return {Integer} 位数\n */ function getDigitCount(value) {\n    var result;\n    if (value === 0) {\n        result = 1;\n    } else {\n        result = Math.floor(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](value).abs().log(10).toNumber()) + 1;\n    }\n    return result;\n}\n/**\n * 按照固定的步长获取[start, end)这个区间的数据\n * 并且需要处理js计算精度的问题\n *\n * @param  {Decimal} start 起点\n * @param  {Decimal} end   终点，不包含该值\n * @param  {Decimal} step  步长\n * @return {Array}         若干数值\n */ function rangeStep(start, end, step) {\n    var num = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](start);\n    var i = 0;\n    var result = []; // magic number to prevent infinite loop\n    while(num.lt(end) && i < 100000){\n        result.push(num.toNumber());\n        num = num.add(step);\n        i++;\n    }\n    return result;\n}\n/**\n * 对数值进行线性插值\n *\n * @param  {Number} a  定义域的极点\n * @param  {Number} b  定义域的极点\n * @param  {Number} t  [0, 1]内的某个值\n * @return {Number}    定义域内的某个值\n */ var interpolateNumber = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.curry)(function(a, b, t) {\n    var newA = +a;\n    var newB = +b;\n    return newA + t * (newB - newA);\n});\n/**\n * 线性插值的逆运算\n *\n * @param  {Number} a 定义域的极点\n * @param  {Number} b 定义域的极点\n * @param  {Number} x 可以认为是插值后的一个输出值\n * @return {Number}   当x在 a ~ b这个范围内时，返回值属于[0, 1]\n */ var uninterpolateNumber = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.curry)(function(a, b, x) {\n    var diff = b - +a;\n    diff = diff || Infinity;\n    return (x - a) / diff;\n});\n/**\n * 线性插值的逆运算，并且有截断的操作\n *\n * @param  {Number} a 定义域的极点\n * @param  {Number} b 定义域的极点\n * @param  {Number} x 可以认为是插值后的一个输出值\n * @return {Number}   当x在 a ~ b这个区间内时，返回值属于[0, 1]，\n * 当x不在 a ~ b这个区间时，会截断到 a ~ b 这个区间\n */ var uninterpolateTruncation = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.curry)(function(a, b, x) {\n    var diff = b - +a;\n    diff = diff || Infinity;\n    return Math.max(0, Math.min(1, (x - a) / diff));\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    rangeStep: rangeStep,\n    getDigitCount: getDigitCount,\n    interpolateNumber: interpolateNumber,\n    uninterpolateNumber: uninterpolateNumber,\n    uninterpolateTruncation: uninterpolateTruncation\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlY2hhcnRzLXNjYWxlQDAuNC41L25vZGVfbW9kdWxlcy9yZWNoYXJ0cy1zY2FsZS9lczYvdXRpbC9hcml0aG1ldGljLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0NBSUMsR0FDc0M7QUFDUDtBQUNoQzs7Ozs7Ozs7Q0FRQyxHQUVELFNBQVNFLGNBQWNDLEtBQUs7SUFDMUIsSUFBSUM7SUFFSixJQUFJRCxVQUFVLEdBQUc7UUFDZkMsU0FBUztJQUNYLE9BQU87UUFDTEEsU0FBU0MsS0FBS0MsS0FBSyxDQUFDLElBQUlOLHdEQUFPQSxDQUFDRyxPQUFPSSxHQUFHLEdBQUdDLEdBQUcsQ0FBQyxJQUFJQyxRQUFRLE1BQU07SUFDckU7SUFFQSxPQUFPTDtBQUNUO0FBQ0E7Ozs7Ozs7O0NBUUMsR0FHRCxTQUFTTSxVQUFVQyxLQUFLLEVBQUVDLEdBQUcsRUFBRUMsSUFBSTtJQUNqQyxJQUFJQyxNQUFNLElBQUlkLHdEQUFPQSxDQUFDVztJQUN0QixJQUFJSSxJQUFJO0lBQ1IsSUFBSVgsU0FBUyxFQUFFLEVBQUUsd0NBQXdDO0lBRXpELE1BQU9VLElBQUlFLEVBQUUsQ0FBQ0osUUFBUUcsSUFBSSxPQUFRO1FBQ2hDWCxPQUFPYSxJQUFJLENBQUNILElBQUlMLFFBQVE7UUFDeEJLLE1BQU1BLElBQUlJLEdBQUcsQ0FBQ0w7UUFDZEU7SUFDRjtJQUVBLE9BQU9YO0FBQ1Q7QUFDQTs7Ozs7OztDQU9DLEdBR0QsSUFBSWUsb0JBQW9CbEIsNkNBQUtBLENBQUMsU0FBVW1CLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDO0lBQzdDLElBQUlDLE9BQU8sQ0FBQ0g7SUFDWixJQUFJSSxPQUFPLENBQUNIO0lBQ1osT0FBT0UsT0FBT0QsSUFBS0UsQ0FBQUEsT0FBT0QsSUFBRztBQUMvQjtBQUNBOzs7Ozs7O0NBT0MsR0FFRCxJQUFJRSxzQkFBc0J4Qiw2Q0FBS0EsQ0FBQyxTQUFVbUIsQ0FBQyxFQUFFQyxDQUFDLEVBQUVLLENBQUM7SUFDL0MsSUFBSUMsT0FBT04sSUFBSSxDQUFDRDtJQUNoQk8sT0FBT0EsUUFBUUM7SUFDZixPQUFPLENBQUNGLElBQUlOLENBQUFBLElBQUtPO0FBQ25CO0FBQ0E7Ozs7Ozs7O0NBUUMsR0FFRCxJQUFJRSwwQkFBMEI1Qiw2Q0FBS0EsQ0FBQyxTQUFVbUIsQ0FBQyxFQUFFQyxDQUFDLEVBQUVLLENBQUM7SUFDbkQsSUFBSUMsT0FBT04sSUFBSSxDQUFDRDtJQUNoQk8sT0FBT0EsUUFBUUM7SUFDZixPQUFPdkIsS0FBS3lCLEdBQUcsQ0FBQyxHQUFHekIsS0FBSzBCLEdBQUcsQ0FBQyxHQUFHLENBQUNMLElBQUlOLENBQUFBLElBQUtPO0FBQzNDO0FBQ0EsaUVBQWU7SUFDYmpCLFdBQVdBO0lBQ1hSLGVBQWVBO0lBQ2ZpQixtQkFBbUJBO0lBQ25CTSxxQkFBcUJBO0lBQ3JCSSx5QkFBeUJBO0FBQzNCLENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hpcmVyLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWNoYXJ0cy1zY2FsZUAwLjQuNS9ub2RlX21vZHVsZXMvcmVjaGFydHMtc2NhbGUvZXM2L3V0aWwvYXJpdGhtZXRpYy5qcz8zN2NiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVPdmVydmlldyDkuIDkupvlhaznlKjnmoTov5Dnrpfmlrnms5VcbiAqIEBhdXRob3IgeGlsZTYxMVxuICogQGRhdGUgMjAxNS0wOS0xN1xuICovXG5pbXBvcnQgRGVjaW1hbCBmcm9tICdkZWNpbWFsLmpzLWxpZ2h0JztcbmltcG9ydCB7IGN1cnJ5IH0gZnJvbSAnLi91dGlscyc7XG4vKipcbiAqIOiOt+WPluaVsOWAvOeahOS9jeaVsFxuICog5YW25Lit57ud5a+55YC85bGe5LqO5Yy66Ze0WzAuMSwgMSnvvIwg5b6X5Yiw55qE5YC85Li6MFxuICog57ud5a+55YC85bGe5LqO5Yy66Ze0WzAuMDEsIDAuMSnvvIzlvpfliLDnmoTkvY3mlbDkuLogLTFcbiAqIOe7neWvueWAvOWxnuS6juWMuumXtFswLjAwMSwgMC4wMSnvvIzlvpfliLDnmoTkvY3mlbDkuLogLTJcbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IHZhbHVlIOaVsOWAvFxuICogQHJldHVybiB7SW50ZWdlcn0g5L2N5pWwXG4gKi9cblxuZnVuY3Rpb24gZ2V0RGlnaXRDb3VudCh2YWx1ZSkge1xuICB2YXIgcmVzdWx0O1xuXG4gIGlmICh2YWx1ZSA9PT0gMCkge1xuICAgIHJlc3VsdCA9IDE7XG4gIH0gZWxzZSB7XG4gICAgcmVzdWx0ID0gTWF0aC5mbG9vcihuZXcgRGVjaW1hbCh2YWx1ZSkuYWJzKCkubG9nKDEwKS50b051bWJlcigpKSArIDE7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiDmjInnhaflm7rlrprnmoTmraXplb/ojrflj5Zbc3RhcnQsIGVuZCnov5nkuKrljLrpl7TnmoTmlbDmja5cbiAqIOW5tuS4lOmcgOimgeWkhOeQhmpz6K6h566X57K+5bqm55qE6Zeu6aKYXG4gKlxuICogQHBhcmFtICB7RGVjaW1hbH0gc3RhcnQg6LW354K5XG4gKiBAcGFyYW0gIHtEZWNpbWFsfSBlbmQgICDnu4jngrnvvIzkuI3ljIXlkKvor6XlgLxcbiAqIEBwYXJhbSAge0RlY2ltYWx9IHN0ZXAgIOatpemVv1xuICogQHJldHVybiB7QXJyYXl9ICAgICAgICAg6Iul5bmy5pWw5YC8XG4gKi9cblxuXG5mdW5jdGlvbiByYW5nZVN0ZXAoc3RhcnQsIGVuZCwgc3RlcCkge1xuICB2YXIgbnVtID0gbmV3IERlY2ltYWwoc3RhcnQpO1xuICB2YXIgaSA9IDA7XG4gIHZhciByZXN1bHQgPSBbXTsgLy8gbWFnaWMgbnVtYmVyIHRvIHByZXZlbnQgaW5maW5pdGUgbG9vcFxuXG4gIHdoaWxlIChudW0ubHQoZW5kKSAmJiBpIDwgMTAwMDAwKSB7XG4gICAgcmVzdWx0LnB1c2gobnVtLnRvTnVtYmVyKCkpO1xuICAgIG51bSA9IG51bS5hZGQoc3RlcCk7XG4gICAgaSsrO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICog5a+55pWw5YC86L+b6KGM57q/5oCn5o+S5YC8XG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSBhICDlrprkuYnln5/nmoTmnoHngrlcbiAqIEBwYXJhbSAge051bWJlcn0gYiAg5a6a5LmJ5Z+f55qE5p6B54K5XG4gKiBAcGFyYW0gIHtOdW1iZXJ9IHQgIFswLCAxXeWGheeahOafkOS4quWAvFxuICogQHJldHVybiB7TnVtYmVyfSAgICDlrprkuYnln5/lhoXnmoTmn5DkuKrlgLxcbiAqL1xuXG5cbnZhciBpbnRlcnBvbGF0ZU51bWJlciA9IGN1cnJ5KGZ1bmN0aW9uIChhLCBiLCB0KSB7XG4gIHZhciBuZXdBID0gK2E7XG4gIHZhciBuZXdCID0gK2I7XG4gIHJldHVybiBuZXdBICsgdCAqIChuZXdCIC0gbmV3QSk7XG59KTtcbi8qKlxuICog57q/5oCn5o+S5YC855qE6YCG6L+Q566XXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSBhIOWumuS5ieWfn+eahOaegeeCuVxuICogQHBhcmFtICB7TnVtYmVyfSBiIOWumuS5ieWfn+eahOaegeeCuVxuICogQHBhcmFtICB7TnVtYmVyfSB4IOWPr+S7peiupOS4uuaYr+aPkuWAvOWQjueahOS4gOS4qui+k+WHuuWAvFxuICogQHJldHVybiB7TnVtYmVyfSAgIOW9k3jlnKggYSB+IGLov5nkuKrojIPlm7TlhoXml7bvvIzov5Tlm57lgLzlsZ7kuo5bMCwgMV1cbiAqL1xuXG52YXIgdW5pbnRlcnBvbGF0ZU51bWJlciA9IGN1cnJ5KGZ1bmN0aW9uIChhLCBiLCB4KSB7XG4gIHZhciBkaWZmID0gYiAtICthO1xuICBkaWZmID0gZGlmZiB8fCBJbmZpbml0eTtcbiAgcmV0dXJuICh4IC0gYSkgLyBkaWZmO1xufSk7XG4vKipcbiAqIOe6v+aAp+aPkuWAvOeahOmAhui/kOeul++8jOW5tuS4lOacieaIquaWreeahOaTjeS9nFxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gYSDlrprkuYnln5/nmoTmnoHngrlcbiAqIEBwYXJhbSAge051bWJlcn0gYiDlrprkuYnln5/nmoTmnoHngrlcbiAqIEBwYXJhbSAge051bWJlcn0geCDlj6/ku6XorqTkuLrmmK/mj5LlgLzlkI7nmoTkuIDkuKrovpPlh7rlgLxcbiAqIEByZXR1cm4ge051bWJlcn0gICDlvZN45ZyoIGEgfiBi6L+Z5Liq5Yy66Ze05YaF5pe277yM6L+U5Zue5YC85bGe5LqOWzAsIDFd77yMXG4gKiDlvZN45LiN5ZyoIGEgfiBi6L+Z5Liq5Yy66Ze05pe277yM5Lya5oiq5pat5YiwIGEgfiBiIOi/meS4quWMuumXtFxuICovXG5cbnZhciB1bmludGVycG9sYXRlVHJ1bmNhdGlvbiA9IGN1cnJ5KGZ1bmN0aW9uIChhLCBiLCB4KSB7XG4gIHZhciBkaWZmID0gYiAtICthO1xuICBkaWZmID0gZGlmZiB8fCBJbmZpbml0eTtcbiAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKDEsICh4IC0gYSkgLyBkaWZmKSk7XG59KTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgcmFuZ2VTdGVwOiByYW5nZVN0ZXAsXG4gIGdldERpZ2l0Q291bnQ6IGdldERpZ2l0Q291bnQsXG4gIGludGVycG9sYXRlTnVtYmVyOiBpbnRlcnBvbGF0ZU51bWJlcixcbiAgdW5pbnRlcnBvbGF0ZU51bWJlcjogdW5pbnRlcnBvbGF0ZU51bWJlcixcbiAgdW5pbnRlcnBvbGF0ZVRydW5jYXRpb246IHVuaW50ZXJwb2xhdGVUcnVuY2F0aW9uXG59OyJdLCJuYW1lcyI6WyJEZWNpbWFsIiwiY3VycnkiLCJnZXREaWdpdENvdW50IiwidmFsdWUiLCJyZXN1bHQiLCJNYXRoIiwiZmxvb3IiLCJhYnMiLCJsb2ciLCJ0b051bWJlciIsInJhbmdlU3RlcCIsInN0YXJ0IiwiZW5kIiwic3RlcCIsIm51bSIsImkiLCJsdCIsInB1c2giLCJhZGQiLCJpbnRlcnBvbGF0ZU51bWJlciIsImEiLCJiIiwidCIsIm5ld0EiLCJuZXdCIiwidW5pbnRlcnBvbGF0ZU51bWJlciIsIngiLCJkaWZmIiwiSW5maW5pdHkiLCJ1bmludGVycG9sYXRlVHJ1bmNhdGlvbiIsIm1heCIsIm1pbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/arithmetic.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/utils.js":
/*!***************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/utils.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PLACE_HOLDER: () => (/* binding */ PLACE_HOLDER),\n/* harmony export */   compose: () => (/* binding */ compose),\n/* harmony export */   curry: () => (/* binding */ curry),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   memoize: () => (/* binding */ memoize),\n/* harmony export */   range: () => (/* binding */ range),\n/* harmony export */   reverse: () => (/* binding */ reverse)\n/* harmony export */ });\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++){\n        arr2[i] = arr[i];\n    }\n    return arr2;\n}\nvar identity = function identity(i) {\n    return i;\n};\nvar PLACE_HOLDER = {\n    \"@@functional/placeholder\": true\n};\nvar isPlaceHolder = function isPlaceHolder(val) {\n    return val === PLACE_HOLDER;\n};\nvar curry0 = function curry0(fn) {\n    return function _curried() {\n        if (arguments.length === 0 || arguments.length === 1 && isPlaceHolder(arguments.length <= 0 ? undefined : arguments[0])) {\n            return _curried;\n        }\n        return fn.apply(void 0, arguments);\n    };\n};\nvar curryN = function curryN(n, fn) {\n    if (n === 1) {\n        return fn;\n    }\n    return curry0(function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        var argsLength = args.filter(function(arg) {\n            return arg !== PLACE_HOLDER;\n        }).length;\n        if (argsLength >= n) {\n            return fn.apply(void 0, args);\n        }\n        return curryN(n - argsLength, curry0(function() {\n            for(var _len2 = arguments.length, restArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n                restArgs[_key2] = arguments[_key2];\n            }\n            var newArgs = args.map(function(arg) {\n                return isPlaceHolder(arg) ? restArgs.shift() : arg;\n            });\n            return fn.apply(void 0, _toConsumableArray(newArgs).concat(restArgs));\n        }));\n    });\n};\nvar curry = function curry(fn) {\n    return curryN(fn.length, fn);\n};\nvar range = function range(begin, end) {\n    var arr = [];\n    for(var i = begin; i < end; ++i){\n        arr[i - begin] = i;\n    }\n    return arr;\n};\nvar map = curry(function(fn, arr) {\n    if (Array.isArray(arr)) {\n        return arr.map(fn);\n    }\n    return Object.keys(arr).map(function(key) {\n        return arr[key];\n    }).map(fn);\n});\nvar compose = function compose() {\n    for(var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++){\n        args[_key3] = arguments[_key3];\n    }\n    if (!args.length) {\n        return identity;\n    }\n    var fns = args.reverse(); // first function can receive multiply arguments\n    var firstFn = fns[0];\n    var tailsFn = fns.slice(1);\n    return function() {\n        return tailsFn.reduce(function(res, fn) {\n            return fn(res);\n        }, firstFn.apply(void 0, arguments));\n    };\n};\nvar reverse = function reverse(arr) {\n    if (Array.isArray(arr)) {\n        return arr.reverse();\n    } // can be string\n    return arr.split(\"\").reverse.join(\"\");\n};\nvar memoize = function memoize(fn) {\n    var lastArgs = null;\n    var lastResult = null;\n    return function() {\n        for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++){\n            args[_key4] = arguments[_key4];\n        }\n        if (lastArgs && args.every(function(val, i) {\n            return val === lastArgs[i];\n        })) {\n            return lastResult;\n        }\n        lastArgs = args;\n        lastResult = fn.apply(void 0, args);\n        return lastResult;\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/utils.js\n");

/***/ })

};
;