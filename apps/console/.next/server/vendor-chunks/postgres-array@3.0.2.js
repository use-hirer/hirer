"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/postgres-array@3.0.2";
exports.ids = ["vendor-chunks/postgres-array@3.0.2"];
exports.modules = {

/***/ "(rsc)/../../node_modules/.pnpm/postgres-array@3.0.2/node_modules/postgres-array/index.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/.pnpm/postgres-array@3.0.2/node_modules/postgres-array/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.parse = function(source, transform) {\n    return parsePostgresArray(source, transform);\n};\nfunction parsePostgresArray(source, transform, nested = false) {\n    let character = \"\";\n    let quote = false;\n    let position = 0;\n    let dimension = 0;\n    const entries = [];\n    let recorded = \"\";\n    const newEntry = function(includeEmpty) {\n        let entry = recorded;\n        if (entry.length > 0 || includeEmpty) {\n            if (entry === \"NULL\" && !includeEmpty) {\n                entry = null;\n            }\n            if (entry !== null && transform) {\n                entry = transform(entry);\n            }\n            entries.push(entry);\n            recorded = \"\";\n        }\n    };\n    if (source[0] === \"[\") {\n        while(position < source.length){\n            const char = source[position++];\n            if (char === \"=\") {\n                break;\n            }\n        }\n    }\n    while(position < source.length){\n        let escaped = false;\n        character = source[position++];\n        if (character === \"\\\\\") {\n            character = source[position++];\n            escaped = true;\n        }\n        if (character === \"{\" && !quote) {\n            dimension++;\n            if (dimension > 1) {\n                const parser = parsePostgresArray(source.substr(position - 1), transform, true);\n                entries.push(parser.entries);\n                position += parser.position - 2;\n            }\n        } else if (character === \"}\" && !quote) {\n            dimension--;\n            if (!dimension) {\n                newEntry();\n                if (nested) {\n                    return {\n                        entries,\n                        position\n                    };\n                }\n            }\n        } else if (character === '\"' && !escaped) {\n            if (quote) {\n                newEntry(true);\n            }\n            quote = !quote;\n        } else if (character === \",\" && !quote) {\n            newEntry();\n        } else {\n            recorded += character;\n        }\n    }\n    if (dimension !== 0) {\n        throw new Error(\"array dimension not balanced\");\n    }\n    return entries;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RncmVzLWFycmF5QDMuMC4yL25vZGVfbW9kdWxlcy9wb3N0Z3Jlcy1hcnJheS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxhQUFhLEdBQUcsU0FBVUUsTUFBTSxFQUFFQyxTQUFTO0lBQ3pDLE9BQU9DLG1CQUFtQkYsUUFBUUM7QUFDcEM7QUFFQSxTQUFTQyxtQkFBb0JGLE1BQU0sRUFBRUMsU0FBUyxFQUFFRSxTQUFTLEtBQUs7SUFDNUQsSUFBSUMsWUFBWTtJQUNoQixJQUFJQyxRQUFRO0lBQ1osSUFBSUMsV0FBVztJQUNmLElBQUlDLFlBQVk7SUFDaEIsTUFBTUMsVUFBVSxFQUFFO0lBQ2xCLElBQUlDLFdBQVc7SUFFZixNQUFNQyxXQUFXLFNBQVVDLFlBQVk7UUFDckMsSUFBSUMsUUFBUUg7UUFFWixJQUFJRyxNQUFNQyxNQUFNLEdBQUcsS0FBS0YsY0FBYztZQUNwQyxJQUFJQyxVQUFVLFVBQVUsQ0FBQ0QsY0FBYztnQkFDckNDLFFBQVE7WUFDVjtZQUVBLElBQUlBLFVBQVUsUUFBUVgsV0FBVztnQkFDL0JXLFFBQVFYLFVBQVVXO1lBQ3BCO1lBRUFKLFFBQVFNLElBQUksQ0FBQ0Y7WUFDYkgsV0FBVztRQUNiO0lBQ0Y7SUFFQSxJQUFJVCxNQUFNLENBQUMsRUFBRSxLQUFLLEtBQUs7UUFDckIsTUFBT00sV0FBV04sT0FBT2EsTUFBTSxDQUFFO1lBQy9CLE1BQU1FLE9BQU9mLE1BQU0sQ0FBQ00sV0FBVztZQUUvQixJQUFJUyxTQUFTLEtBQUs7Z0JBQUU7WUFBTTtRQUM1QjtJQUNGO0lBRUEsTUFBT1QsV0FBV04sT0FBT2EsTUFBTSxDQUFFO1FBQy9CLElBQUlHLFVBQVU7UUFDZFosWUFBWUosTUFBTSxDQUFDTSxXQUFXO1FBRTlCLElBQUlGLGNBQWMsTUFBTTtZQUN0QkEsWUFBWUosTUFBTSxDQUFDTSxXQUFXO1lBQzlCVSxVQUFVO1FBQ1o7UUFFQSxJQUFJWixjQUFjLE9BQU8sQ0FBQ0MsT0FBTztZQUMvQkU7WUFFQSxJQUFJQSxZQUFZLEdBQUc7Z0JBQ2pCLE1BQU1VLFNBQVNmLG1CQUFtQkYsT0FBT2tCLE1BQU0sQ0FBQ1osV0FBVyxJQUFJTCxXQUFXO2dCQUUxRU8sUUFBUU0sSUFBSSxDQUFDRyxPQUFPVCxPQUFPO2dCQUMzQkYsWUFBWVcsT0FBT1gsUUFBUSxHQUFHO1lBQ2hDO1FBQ0YsT0FBTyxJQUFJRixjQUFjLE9BQU8sQ0FBQ0MsT0FBTztZQUN0Q0U7WUFFQSxJQUFJLENBQUNBLFdBQVc7Z0JBQ2RHO2dCQUVBLElBQUlQLFFBQVE7b0JBQ1YsT0FBTzt3QkFDTEs7d0JBQ0FGO29CQUNGO2dCQUNGO1lBQ0Y7UUFDRixPQUFPLElBQUlGLGNBQWMsT0FBTyxDQUFDWSxTQUFTO1lBQ3hDLElBQUlYLE9BQU87Z0JBQ1RLLFNBQVM7WUFDWDtZQUVBTCxRQUFRLENBQUNBO1FBQ1gsT0FBTyxJQUFJRCxjQUFjLE9BQU8sQ0FBQ0MsT0FBTztZQUN0Q0s7UUFDRixPQUFPO1lBQ0xELFlBQVlMO1FBQ2Q7SUFDRjtJQUVBLElBQUlHLGNBQWMsR0FBRztRQUNuQixNQUFNLElBQUlZLE1BQU07SUFDbEI7SUFFQSxPQUFPWDtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaGlyZXIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3Bvc3RncmVzLWFycmF5QDMuMC4yL25vZGVfbW9kdWxlcy9wb3N0Z3Jlcy1hcnJheS9pbmRleC5qcz8wMmI4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5leHBvcnRzLnBhcnNlID0gZnVuY3Rpb24gKHNvdXJjZSwgdHJhbnNmb3JtKSB7XG4gIHJldHVybiBwYXJzZVBvc3RncmVzQXJyYXkoc291cmNlLCB0cmFuc2Zvcm0pXG59XG5cbmZ1bmN0aW9uIHBhcnNlUG9zdGdyZXNBcnJheSAoc291cmNlLCB0cmFuc2Zvcm0sIG5lc3RlZCA9IGZhbHNlKSB7XG4gIGxldCBjaGFyYWN0ZXIgPSAnJ1xuICBsZXQgcXVvdGUgPSBmYWxzZVxuICBsZXQgcG9zaXRpb24gPSAwXG4gIGxldCBkaW1lbnNpb24gPSAwXG4gIGNvbnN0IGVudHJpZXMgPSBbXVxuICBsZXQgcmVjb3JkZWQgPSAnJ1xuXG4gIGNvbnN0IG5ld0VudHJ5ID0gZnVuY3Rpb24gKGluY2x1ZGVFbXB0eSkge1xuICAgIGxldCBlbnRyeSA9IHJlY29yZGVkXG5cbiAgICBpZiAoZW50cnkubGVuZ3RoID4gMCB8fCBpbmNsdWRlRW1wdHkpIHtcbiAgICAgIGlmIChlbnRyeSA9PT0gJ05VTEwnICYmICFpbmNsdWRlRW1wdHkpIHtcbiAgICAgICAgZW50cnkgPSBudWxsXG4gICAgICB9XG5cbiAgICAgIGlmIChlbnRyeSAhPT0gbnVsbCAmJiB0cmFuc2Zvcm0pIHtcbiAgICAgICAgZW50cnkgPSB0cmFuc2Zvcm0oZW50cnkpXG4gICAgICB9XG5cbiAgICAgIGVudHJpZXMucHVzaChlbnRyeSlcbiAgICAgIHJlY29yZGVkID0gJydcbiAgICB9XG4gIH1cblxuICBpZiAoc291cmNlWzBdID09PSAnWycpIHtcbiAgICB3aGlsZSAocG9zaXRpb24gPCBzb3VyY2UubGVuZ3RoKSB7XG4gICAgICBjb25zdCBjaGFyID0gc291cmNlW3Bvc2l0aW9uKytdXG5cbiAgICAgIGlmIChjaGFyID09PSAnPScpIHsgYnJlYWsgfVxuICAgIH1cbiAgfVxuXG4gIHdoaWxlIChwb3NpdGlvbiA8IHNvdXJjZS5sZW5ndGgpIHtcbiAgICBsZXQgZXNjYXBlZCA9IGZhbHNlXG4gICAgY2hhcmFjdGVyID0gc291cmNlW3Bvc2l0aW9uKytdXG5cbiAgICBpZiAoY2hhcmFjdGVyID09PSAnXFxcXCcpIHtcbiAgICAgIGNoYXJhY3RlciA9IHNvdXJjZVtwb3NpdGlvbisrXVxuICAgICAgZXNjYXBlZCA9IHRydWVcbiAgICB9XG5cbiAgICBpZiAoY2hhcmFjdGVyID09PSAneycgJiYgIXF1b3RlKSB7XG4gICAgICBkaW1lbnNpb24rK1xuXG4gICAgICBpZiAoZGltZW5zaW9uID4gMSkge1xuICAgICAgICBjb25zdCBwYXJzZXIgPSBwYXJzZVBvc3RncmVzQXJyYXkoc291cmNlLnN1YnN0cihwb3NpdGlvbiAtIDEpLCB0cmFuc2Zvcm0sIHRydWUpXG5cbiAgICAgICAgZW50cmllcy5wdXNoKHBhcnNlci5lbnRyaWVzKVxuICAgICAgICBwb3NpdGlvbiArPSBwYXJzZXIucG9zaXRpb24gLSAyXG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChjaGFyYWN0ZXIgPT09ICd9JyAmJiAhcXVvdGUpIHtcbiAgICAgIGRpbWVuc2lvbi0tXG5cbiAgICAgIGlmICghZGltZW5zaW9uKSB7XG4gICAgICAgIG5ld0VudHJ5KClcblxuICAgICAgICBpZiAobmVzdGVkKSB7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGVudHJpZXMsXG4gICAgICAgICAgICBwb3NpdGlvblxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoY2hhcmFjdGVyID09PSAnXCInICYmICFlc2NhcGVkKSB7XG4gICAgICBpZiAocXVvdGUpIHtcbiAgICAgICAgbmV3RW50cnkodHJ1ZSlcbiAgICAgIH1cblxuICAgICAgcXVvdGUgPSAhcXVvdGVcbiAgICB9IGVsc2UgaWYgKGNoYXJhY3RlciA9PT0gJywnICYmICFxdW90ZSkge1xuICAgICAgbmV3RW50cnkoKVxuICAgIH0gZWxzZSB7XG4gICAgICByZWNvcmRlZCArPSBjaGFyYWN0ZXJcbiAgICB9XG4gIH1cblxuICBpZiAoZGltZW5zaW9uICE9PSAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdhcnJheSBkaW1lbnNpb24gbm90IGJhbGFuY2VkJylcbiAgfVxuXG4gIHJldHVybiBlbnRyaWVzXG59XG4iXSwibmFtZXMiOlsiZXhwb3J0cyIsInBhcnNlIiwic291cmNlIiwidHJhbnNmb3JtIiwicGFyc2VQb3N0Z3Jlc0FycmF5IiwibmVzdGVkIiwiY2hhcmFjdGVyIiwicXVvdGUiLCJwb3NpdGlvbiIsImRpbWVuc2lvbiIsImVudHJpZXMiLCJyZWNvcmRlZCIsIm5ld0VudHJ5IiwiaW5jbHVkZUVtcHR5IiwiZW50cnkiLCJsZW5ndGgiLCJwdXNoIiwiY2hhciIsImVzY2FwZWQiLCJwYXJzZXIiLCJzdWJzdHIiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/postgres-array@3.0.2/node_modules/postgres-array/index.js\n");

/***/ })

};
;